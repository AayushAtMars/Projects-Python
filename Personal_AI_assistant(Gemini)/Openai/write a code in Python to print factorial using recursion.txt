```python
def factorial(n):
  """Calculates the factorial of a non-negative integer using recursion.

  Args:
    n: The non-negative integer for which to calculate the factorial.

  Returns:
    The factorial of n, or 1 if n is 0.
  """
  if n == 0:
    return 1
  else:
    return n * factorial(n - 1)

# Get user input for the number
num = int(input("Enter a non-negative integer: "))

# Calculate and print the factorial
print(f"The factorial of {num} is {factorial(num)}")
```

**Explanation:**

1. **Function Definition:** The code defines a function called `factorial(n)` that takes an integer `n` as input.

2. **Base Case:** The `if n == 0:` statement handles the base case of the recursion. When `n` is 0, the factorial is 1.

3. **Recursive Case:** The `else:` statement handles the recursive case. It calculates the factorial of `n` by multiplying `n` with the factorial of `n-1`. This call to `factorial(n-1)` is the recursive part, as it calls the `factorial` function again with a smaller value of `n`.

4. **User Input:** The code prompts the user to enter a non-negative integer and stores it in the variable `num`.

5. **Calculation and Output:** The code calls the `factorial(num)` function to calculate the factorial of the entered number and prints the result.

**How Recursion Works:**

* The function calls itself with a smaller value of `n` until it reaches the base case (n=0).
* Once the base case is reached, the function starts returning values back up the call stack.
* Each recursive call multiplies the current value of `n` with the result of the previous recursive call.

**Example:**

If the user enters 5, the function will execute as follows:

1. `factorial(5)`: 5 * `factorial(4)`
2. `factorial(4)`: 4 * `factorial(3)`
3. `factorial(3)`: 3 * `factorial(2)`
4. `factorial(2)`: 2 * `factorial(1)`
5. `factorial(1)`: 1 * `factorial(0)`
6. `factorial(0)`: 1 (base case)

Now, the function starts returning values back up the call stack:

1. `factorial(1)`: 1 * 1 = 1
2. `factorial(2)`: 2 * 1 = 2
3. `factorial(3)`: 3 * 2 = 6
4. `factorial(4)`: 4 * 6 = 24
5. `factorial(5)`: 5 * 24 = 120

Therefore, the final output will be "The factorial of 5 is 120".
